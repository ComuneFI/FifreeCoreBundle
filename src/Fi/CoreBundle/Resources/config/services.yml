parameters:
#    fi_core.example.class: Fi\CoreBundle\Example 
  ficorebundle.db.table_schema: 
  ficorebundle.db.table_prefix: __corebundle_
  maintenanceLockFilePath: "%kernel.cache_dir%/maintenance.lock"  
  
services:
    fi.twig.fi_permessi_extension:
        class: Fi\CoreBundle\Twig\Extension\PermessiTwigExtension
        arguments: [ '@service_container', '@request_stack' ]
        tags:
            - { name: twig.extension }

    fi.twig.fi_versione_extension:
        class: Fi\CoreBundle\Twig\Extension\VersioneExtension
        arguments: ['@service_container']
        tags:
          - { name: twig.extension }

    fi.twig.fi_utilita_extension:
      class: Fi\CoreBundle\Twig\Extension\UtilitaExtension
      tags:
        - { name: twig.extension }
      arguments: [ '@twig.loader' ]

    fi.twig.fi_misc_extension:
      class: Fi\CoreBundle\Twig\Extension\MiscExtension
      tags:
        - { name: twig.extension }
      arguments: [ '@service_container' ]

    #Informazioni connessione database su Web Debug Toolbar
    data_collector.databaseinfo:
        class: Fi\CoreBundle\Collector\DatabaseInfoDataCollector
        arguments: [ '@service_container' ]
        tags:
            - { name: data_collector , template: "FiCoreBundle:Collector:databaseInfo", id: "databaseInfo" }
            
    #Gestione permessi
    ficorebundle.gestionepermessi:
        class: Fi\CoreBundle\DependencyInjection\GestionePermessi
        public: true
        arguments: [ '@service_container', '@security.token_storage', '@doctrine.orm.entity_manager' ]
            
    #Utility database
    ficorebundle.database.utility:
        class: Fi\CoreBundle\DependencyInjection\DatabaseUtility
        public: true
        arguments: [ '@service_container', '@doctrine.orm.entity_manager' ]
            
    #Utility database
    ficorebundle.entity.utility:
        class: Fi\CoreBundle\DependencyInjection\EntityUtility
        public: true
        arguments: [ '@service_container', '@doctrine.orm.entity_manager' ]
            
    #Utility tabelle di sistema fifree
    ficorebundle.entity.system:
        class: Fi\CoreBundle\DependencyInjection\FifreeSystemTables
        public: true
        arguments: [ '@service_container', '@doctrine.orm.entity_manager' ]
            
    #Utility tabelle
    ficorebundle.tabelle.utility:
        class: Fi\CoreBundle\DependencyInjection\TabelleUtility
        public: true
        arguments: [ '@service_container', '@doctrine.orm.entity_manager' ]
        
    #Stampa tabella
    ficorebundle.tabelle.stampa.pdf:
        class: Fi\CoreBundle\DependencyInjection\EsportaTabellaPdf        
        public: true

    #Esporta tabella excel
    ficorebundle.tabelle.stampa.xls:
        class: Fi\CoreBundle\DependencyInjection\EsportaTabellaXls        
        public: true

    ficorebundle.tblprefix_subscriber:
        class: Fi\CoreBundle\Subscriber\TablePrefixSubscriber
        arguments: ["%ficorebundle.db.table_prefix%"]
        tags:
            - { name: doctrine.event_subscriber }
            
    ficorebundle.tblschema_subscriber:
        class: Fi\CoreBundle\Subscriber\TableSchemaSubscriber
        arguments: ["%ficorebundle.db.table_schema%"]
        tags:
            - { name: doctrine.event_subscriber }

    OpzioniTabella_repository: 
        class: Fi\CoreBundle\Entity\OpzioniTabellaRepository
        public: true
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:  
            - 'Fi\CoreBundle\Entity\OpzioniTabella'   

    Storicomodifiche_repository: 
        class: Fi\CoreBundle\Entity\StoricomodificheRepository
        public: true
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:  
            - 'Fi\CoreBundle\Entity\Storicomodifiche'

    fi_core.type.entity_hidden:
        class: Fi\CoreBundle\Form\Type\EntityHiddenType
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
        - { name: form.type, alias: entity_hidden }
     
#Commands as services
    fifree.command.createdatabase:
        class: Fi\CoreBundle\Command\Fifree2createdatabaseCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.command.dropdatabase:
        class: Fi\CoreBundle\Command\Fifree2dropdatabaseCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.command.droptables:
        class: Fi\CoreBundle\Command\Fifree2droptablesCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.command.install:
        class: Fi\CoreBundle\Command\Fifree2installCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.command.pubblicamanuale:
        class: Fi\CoreBundle\Command\Fifree2pubblicamanualeCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.command.configuratorimport:
        class: Fi\CoreBundle\Command\Fifree2configuratorimportCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.command.configuratorexport:
        class: Fi\CoreBundle\Command\Fifree2configuratorexportCommand
        public: false
        tags:
            -  { name: console.command }
            
    fifree.fos_user.security.login_manager:
        alias: fos_user.security.login_manager
        public: true
            
    fifree.fos_user.user_manager:
        alias: fos_user.user_manager
        public: true
            
    fifree.fos_user.util.user_manipulator:
        alias: fos_user.util.user_manipulator
        public: true
            
    kernel.listener.response_listener:
        class: Fi\CoreBundle\Listener\ResponseListener
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
            
    fifree.maintenance_listener.response_listener:
        class: Fi\CoreBundle\Listener\MaintenanceListener
        arguments: 
            - "%maintenanceLockFilePath%"
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
