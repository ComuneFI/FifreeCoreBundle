language: php

php:
  - 5.6
  - 7.0
  - 7.1
  - 7.2
  #- hhvm

services:
  - mysql
  - pgsql
  
matrix:
    allow_failures:
       # - php: hhvm
       # - php: 7.2
    exclude:
    #- php: hhvm
    #  env: DB=pgsql

# Configure different DB environments
env:
  - DB=mysql
  - DB=pgsql
  - DB=sqlite3
  
#sudo: required
#dist: trusty
cache:
  directories:
    - $HOME/.composer/cache
    
addons:
  firefox: "45.8.0esr"
  
before_script:
  - sudo apt-get update
  - sudo apt-get install apache2 libapache2-mod-fastcgi make
  - if [[ "$TRAVIS_PHP_VERSION" == "5.6" ]]; then phpenv config-add ./tests/build/travis.php.ini; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then echo 'date.timezone = "Europe/Rome"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then sudo apt-get install -y --force-yes php5-dev php-pear php5-mysql php5-curl php5-gd php5-json php5-sqlite php5-pgsql; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf; fi
  - if [[ $TRAVIS_PHP_VERSION == "7.0" ]]; then sudo cp ./tests/build/www.conf ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/; fi
  - if [[ $TRAVIS_PHP_VERSION == "7.1" ]]; then sudo cp ./tests/build/www.conf ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/; fi
  - if [[ $TRAVIS_PHP_VERSION == "7.2" ]]; then sudo cp ./tests/build/www.conf ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.d/; fi
  - sudo a2enmod rewrite actions fastcgi alias
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then sudo sed -i -e "s,www-data,travis,g" /etc/apache2/envvars; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then sudo chown -R travis:travis /var/lib/apache2/fastcgi; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then sudo cp -f ./tests/build/travis-ci-apache /etc/apache2/sites-available/000-default.conf; fi
  - if [[ "$TRAVIS_PHP_VERSION" != "hhvm" ]]; then sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/000-default.conf; fi
  - sudo sed -i 's/Listen 80/Listen 8000/' /etc/apache2/ports.conf
  - sudo sed -i 's/NameVirtualHost \*:80/NameVirtualHost \*:8000/' /etc/apache2/ports.conf
  - sudo service apache2 restart

  - if [[ "$DB" == "pgsql" ]]; then echo "PROVISIONING WITH PostgreSQL"; fi
  - if [[ "$DB" == "pgsql" ]]; then cp -f ./tests/build/parameters.pgsql.yml $TRAVIS_BUILD_DIR/tests/app/config/parameters.yml; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c 'create database unittest;' -U postgres; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "CREATE USER fifreeuser WITH PASSWORD 'fifreeuserpwd';" -U postgres; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "GRANT ALL PRIVILEGES ON DATABASE unittest TO fifreeuser;" -U postgres; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "ALTER USER fifreeuser CREATEDB;" -U postgres; fi
  - if [[ "$DB" == "pgsql" ]]; then psql -c "alter role fifreeuser superuser;" -U postgres; fi
  
  
  - if [[ "$DB" == "mysql" ]]; then echo "PROVISIONING WITH MySQL"; fi
  - if [[ "$DB" == "mysql" ]]; then cp -f ./tests/build/parameters.mysql.yml $TRAVIS_BUILD_DIR/tests/app/config/parameters.yml; fi
  - if [[ "$DB" == "mysql" ]]; then mysql --version; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "CREATE DATABASE unittest;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -u root -e "CREATE USER 'fifreeuser'@'localhost' IDENTIFIED BY 'fifreeuserpwd';"; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -u root -e "GRANT ALL ON unittest.* TO 'fifreeuser'@'localhost';"; fi
  
  - if [[ "$DB" == "sqlite3" ]]; then echo "PROVISIONING WITH Sqlite3"; fi
  - if [[ "$DB" == "sqlite3" ]]; then cp -f ./tests/build/parameters.sqlite.yml $TRAVIS_BUILD_DIR/tests/app/config/parameters.yml; fi
  
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - composer install
  - php tests/bin/console fifree2:install admin admin admin@admin.it --env=test
  # - php bin/console server:start --env=test
  - sh vendor/bin/selenium-server-standalone > /dev/null 2>&1 &
  - /usr/bin/php -v
  # - wget -O - http://127.0.0.1:8000/app_test.php/adminpanel
  

script:
  - if [[ "$TRAVIS_PHP_VERSION" == "5.6" ]]; then ant; fi
  - if [[ "$TRAVIS_PHP_VERSION" == "7.0" ]]; then ant; fi
  - if [[ "$TRAVIS_PHP_VERSION" == "7.1" ]]; then ant; fi
  - if [[ "$TRAVIS_PHP_VERSION" == "7.2" ]]; then ant; fi

after_success:
  - if [[ "$TRAVIS_PHP_VERSION" == "5.6" ]]; then php vendor/bin/php-coveralls -v; fi
  - if [[ "$TRAVIS_PHP_VERSION" == "7.0" ]]; then php vendor/bin/php-coveralls -v; fi
  - if [[ "$TRAVIS_PHP_VERSION" == "7.1" ]]; then php vendor/bin/php-coveralls -v; fi
  - if [[ "$TRAVIS_PHP_VERSION" == "7.2" ]]; then php vendor/bin/php-coveralls -v; fi
  - if [ "$TRAVIS_PHP_VERSION" != "hhvm" ]; then wget https://scrutinizer-ci.com/ocular.phar -t 3; fi;
  - if [ "$TRAVIS_PHP_VERSION" != "hhvm" ]; then php ocular.phar code-coverage:upload --format=php-clover build/artifacts/coverage/clover.xml; fi;
  - rm tests/app/dbtest.sqlite
  - php tests/bin/console server:stop --env=test
  - kill `ps -ef | grep selenium | awk '{ print $2 }'`

after_failure:
  - sudo cat /var/log/apache2/error.log
  - sudo cat /var/log/apache2/access.log
  - sudo cat /var/log/apache2/other_vhosts_access.log
  - sudo cat /var/log/apache2/fifree_error.log
  - sudo cat /var/log/apache2/fifree_access.log
  - sudo cat $TRAVIS_BUILD_DIR/tests/var/logs/test/test.log

notifications:
  email:
  - andrea.manzi@comune.fi.it
